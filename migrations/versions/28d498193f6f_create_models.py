"""Create models

Revision ID: 28d498193f6f
Revises: 52826a1b7e30
Create Date: 2022-05-02 17:00:23.503012

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '28d498193f6f'
down_revision = '52826a1b7e30'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('answers', sa.Column('questionid', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_unique_constraint(None, 'answers', ['id'])
    op.drop_constraint('answers_onquest_fkey', 'answers', type_='foreignkey')
    op.create_foreign_key(None, 'answers', 'questions', ['questionid'], ['id'])
    op.drop_column('answers', 'onquest')
    op.add_column('questions', sa.Column('title', sa.String(length=200), nullable=False))
    op.create_unique_constraint(None, 'questions', ['id'])
    op.drop_column('questions', 'question')
    op.create_unique_constraint(None, 'roles', ['id'])
    op.create_unique_constraint(None, 'testquestion', ['id'])
    op.add_column('tests', sa.Column('is_common', sa.Boolean(), nullable=False))
    op.create_unique_constraint(None, 'tests', ['title'])
    op.create_unique_constraint(None, 'testuser', ['id'])
    op.add_column('users', sa.Column('role_id', postgresql.UUID(as_uuid=True), nullable=False))
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'])
    op.drop_column('users', 'created_on')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('created_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'role_id')
    op.drop_constraint(None, 'testuser', type_='unique')
    op.drop_constraint(None, 'tests', type_='unique')
    op.drop_column('tests', 'is_common')
    op.drop_constraint(None, 'testquestion', type_='unique')
    op.drop_constraint(None, 'roles', type_='unique')
    op.add_column('questions', sa.Column('question', sa.VARCHAR(length=200), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'questions', type_='unique')
    op.drop_column('questions', 'title')
    op.add_column('answers', sa.Column('onquest', postgresql.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'answers', type_='foreignkey')
    op.create_foreign_key('answers_onquest_fkey', 'answers', 'questions', ['onquest'], ['id'])
    op.drop_constraint(None, 'answers', type_='unique')
    op.drop_column('answers', 'questionid')
    # ### end Alembic commands ###
